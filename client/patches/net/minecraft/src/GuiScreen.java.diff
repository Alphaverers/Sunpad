--- GuiScreen.java
+++ GuiScreen.java
@@ -15,4 +15,5 @@
     public int width;
     public int height;
+    public ScaledResolution size;
     protected List<GuiButton> controlList;
     public boolean allowUserInput;
@@ -23,5 +24,4 @@
     static {
         GuiScreen.currentID = "";
-        GuiScreen.currentID = "";
     }
     
@@ -32,5 +32,5 @@
     public GuiScreen() {
         this.hasInputHandler = false;
-        this.controlList = (List<GuiButton>)new ArrayList();
+        this.controlList = new ArrayList<>();
         this.allowUserInput = false;
         this.hasInputHandler = this.InputHandlerLoaded();
@@ -39,5 +39,5 @@
     public void drawScreen(final int mouseX, final int mouseY, final float renderPartialTick) {
         for (int i = 0; i < this.controlList.size(); ++i) {
-            ((GuiButton)this.controlList.get(i)).drawButton(this.mc, mouseX, mouseY);
+        	this.controlList.get(i).drawButton(this.mc, mouseX, mouseY);
         }
     }
@@ -64,5 +64,5 @@
         if (mouseButton == 0) {
             for (int i = 0; i < this.controlList.size(); ++i) {
-                final GuiButton button = (GuiButton)this.controlList.get(i);
+                final GuiButton button = this.controlList.get(i);
                 if (button.mousePressed(x, y)) {
                     this.mc.sndManager.playSoundFX("random.click", 1.0f, 1.0f);
@@ -79,5 +79,5 @@
     }
     
-    public void setWorldAndResolution(final Minecraft minecraft, final int width, final int height) {
+    public void setWorldAndResolution(final Minecraft minecraft, final ScaledResolution size) {
         this.mc = minecraft;
         if (this.hasInputHandler) {
@@ -85,6 +85,7 @@
         }
         this.fontRenderer = minecraft.fontRenderer;
-        this.width = width;
-        this.height = height;
+        this.width = size.getScaledWidth();
+        this.height = size.getScaledHeight();
+        this.size = size;
         this.actionPerformed();
     }
@@ -120,5 +121,5 @@
     public void handleKeyboardInput() {
         if (Keyboard.getEventKeyState()) {
-            if (this.hasInputHandler && InputHandler.cheatsEnabled) {
+            if (this.hasInputHandler && InputHandler.cheatsEnabled && this.mc.gameSettings.cheatMenuMode != 4) {
                 if (Keyboard.getEventKey() == 79) {
                     GuiScreen.currentID = String.valueOf(GuiScreen.currentID) + '1';
@@ -167,9 +168,12 @@
                     try {
                         if (Block.BLOCKS_LIST.length > Integer.parseInt(GuiScreen.currentID) && Block.BLOCKS_LIST[Integer.parseInt(GuiScreen.currentID)] != null) {
-                            this.mc.thePlayer.dropPlayerItemWithRandomChoice(new ItemStack(Block.BLOCKS_LIST[Integer.parseInt(GuiScreen.currentID)], 64), true);
+                            this.mc.thePlayer.dropPlayerItemWithRandomChoice(
+                                    new ItemStack(Block.BLOCKS_LIST[Integer.parseInt(GuiScreen.currentID)], mc.gameSettings.getCheatMenuItemAmount(0)), true);
                             System.out.println("Given block to the player");
                         }
-                        else if (Item.ITEMS_LIST[Integer.parseInt(GuiScreen.currentID)] != null) {
-                            this.mc.thePlayer.dropPlayerItemWithRandomChoice(new ItemStack(Item.ITEMS_LIST[Integer.parseInt(GuiScreen.currentID)], 1), true);
+                        else if (Item.ITEMS_LIST[Integer.parseInt(GuiScreen.currentID)] != null && (
+                                Item.ITEMS_LIST[Integer.parseInt(GuiScreen.currentID)].getVanilla() || NetClientHandler.rosepadMeta != null)) {
+                            this.mc.thePlayer.dropPlayerItemWithRandomChoice(new ItemStack(Item.ITEMS_LIST[Integer.parseInt(GuiScreen.currentID)],
+                                    mc.gameSettings.getCheatMenuItemAmount(1)), true);
                             System.out.println("Given item to the player");
                         }
